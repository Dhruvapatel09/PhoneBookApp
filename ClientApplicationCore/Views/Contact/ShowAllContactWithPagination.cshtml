@using ClientApplicationCore.ViewModels

@model List<ContactViewModel>
@{
    int count = 1;
    string search = ViewBag.Search;
    var distinctLetters = ViewBag.DistinctLetters;
}
<h2>Contacts</h2>
<!DOCTYPE html>
<html>
<body>

    <form method="get" id="myForm">
        <div>
            <div class="btn-row">
                <div class="input-group">
                    <input type="text" name="searchQuery" class="form-control" placeholder="Search..." value="@ViewBag.SearchQuery">

                    <div class="input-group-append">
                        <button type="submit" class="btn btn-primary">Search</button>
                    </div>
                </div>

            </div>
            <a href="/Contact/ShowAllContactWithPagination?letter=@ViewBag.Letter&pageSize=@ViewBag.PageSize" class="btn btn-secondary">Clear</a>
            <div class="button-group">
                @if (distinctLetters != null && distinctLetters.Count>0)
        {
                    @foreach (var letter in distinctLetters)
                    {
                    string buttonClass = "";
                    if (ViewBag.Letter != null && ViewBag.Letter.ToString() == letter.ToString())
                    {
                        buttonClass = "active";
                    }

                    <button class="btn btn-outline-primary @buttonClass" type="submit" name="letter" value="@letter">@letter</button>
                }
                }
                else
                {
                    <p>No records found</p>
                }
                <button class="btn btn-outline-primary" type="submit" name="letter" value="">Show All</button>
            </div>


           @*  <button class="btn btn-light" name="sortOrder" value="asc">Sort Asc</button>
            <button class="btn btn-light" name="sortOrder" value="desc">Sort Desc</button> *@
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Name
                            <a asp-action="ShowAllContactWithPagination" asp-route-sortOrder="asc" asp-route-letter="@ViewBag.Letter" asp-route-pageSize="@ViewBag.PageSize" asp-route-search="@search">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-arrow-up" viewBox="0 0 16 16">
                                    <path d="M8.354 4.354a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V14a.5.5 0 0 1-1 0V5.707L5.646 7.061a.5.5 0 1 1-.708-.708l3-3z" />
                                </svg>
                            </a>
                            <a asp-action="ShowAllContactWithPagination" asp-route-sortOrder="desc" asp-route-letter="@ViewBag.Letter" asp-route-pageSize="@ViewBag.PageSize" asp-route-search="@search">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-arrow-down" viewBox="0 0 16 16">
                                    <path d="M8.354 11.354a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 9.293V2a.5.5 0 0 0-1 0v7.293L5.354 7.646a.5.5 0 1 0-.708.708l3 3z" />
                                </svg>
                            </a>
                        </th>
                        <th>Profile Picture</th>
                        <th></th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Count == 0)
                    {
                        <tr>
                            <td colspan="4">No records found.</td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var contact in Model)
                        {
                            <tr>
                                <td><b>@contact.FirstName @contact.LastName</b></td>
                                <td>
                                    @if (contact.Image != string.Empty)
                                    {
                                        <img src="@Url.Content("~/uploads/" + contact.Image)" class="img-fluid rounded-circle" alt="Contact Image" width="50" height="50" />
                                    }
                                    else
                                    {
                                        <div class="col-sm-10">
                                            <img src="@Url.Content("~/uploads/defaultimage.png")" class="img-fluid rounded-circle" alt="Profile Picture" width="50" height="50" />
                                        </div>
                                    }
                                </td>
                                <td>
                                    @if (contact.Favourites)
                                    {
                                        <span class="mr-1">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill text-warning" viewBox="0 0 16 16">
                                                <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z" />
                                            </svg>
                                        </span>
                                    }
                                </td>
                                <td>
                                    <div class="dropdown">
                                        <button class="dropbtn">&#x22EE;</button>
                                        <div class="dropdown-content">
                                            <a href="@Url.Action("Details", "Contact", new { id = contact.PhoneId })" style="color: black;">View Details</a>
                                            <a href="@Url.Action("Edit", "Contact", new { id = contact.PhoneId })" style="color: black;">Edit Contact</a>
                                            <a href="@Url.Action("Delete", "Contact", new { id = contact.PhoneId })" style="color: red;">Delete Contact</a>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

    </form>
    <button class="btn"><a style="text-decoration:none" asp-action="Create">Add</a></button>

    @if (Model.Count > 0)
    {
        <!-- Pagination -->
        <div>
            <!-- Page size dropdown -->
            <label for="pageSize">Page Size:</label>
            <select id="pageSize" onchange="changePageSize(this)">
                <option value="2">2</option>
                <option value="4">4</option>
                <option value="6">6</option>
            </select>
            <ul class="pagination">
                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.Page ? "active" : "")">
                        <a class="page-link" href="/Contact/ShowAllContactWithPagination?letter=@ViewBag.Letter&page=@i&pageSize=@ViewBag.PageSize&searchQuery=@ViewBag.SearchQuery&sortOrder=@ViewBag.SortOrder">@i</a>
                    </li>
                }
            </ul>
        </div>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                var currentPageSize = @(ViewBag.PageSize); // Get current page size from ViewBag
                var pageSizeDropdown = document.getElementById("pageSize");
                for (var i = 0; i < pageSizeDropdown.options.length; i++) {
                    if (pageSizeDropdown.options[i].value === currentPageSize.toString()) {
                        pageSizeDropdown.selectedIndex = i;
                        break;
                    }
                }
            });

            function changePageSize(select) {
                var pageSize = select.value;
                var currentPage = "@ViewBag.CurrentPage";
                var letter = "@ViewBag.Letter";
                var searchQuery = "@ViewBag.SearchQuery";
                window.location.href = "/Contact/ShowAllContactWithPagination?letter=" + letter + "&page=" + currentPage + "&pageSize=" + pageSize + "&searchQuery=" + searchQuery;
            }

            // $(document).ready(function () {
            //     $('.dropbtn').on('click', function (event) {
            //         event.stopPropagation();
            //         var dropdownContent = $(this).next('.dropdown-content');
            //         $('.dropdown-content').not(dropdownContent).hide(); // Hide other dropdowns
            //         dropdownContent.toggle(); // Toggle the current dropdown
            //     });

            //     $(document).on('click', function () {
            //         $('.dropdown-content').hide();
            //     });
            // });

            function sortContacts(order) {
                var currentUrl = window.location.href;
                var newUrl;
                // Check if the current URL already contains a sortOrder parameter
                if (currentUrl.includes("sortOrder")) {
                    // If sortOrder parameter exists, replace its value with the new order
                    newUrl = currentUrl.replace(/sortOrder=[^\&]+/, "sortOrder=" + order);
                } else {
                    // If sortOrder parameter does not exist, add it to the URL
                    newUrl = currentUrl + (currentUrl.includes("?") ? "&" : "?") + "sortOrder=" + order;
                }
                // Redirect to the new URL
                window.location.href = newUrl;
            }
        </script>

    }
</body>
</html>

<style>
    .dropbtn {
        background-color: transparent;
        border: none;
        cursor: pointer;
        font-size: 16px;
    }

    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: white;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
        min-width: 160px;
        right: 0;
    }

        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

            .dropdown-content a:hover {
                background-color: #ddd;
            }

    .dropdown:hover .dropdown-content {
        display: block;
    }

    .btn {
        color: blue;
        background-color: white;
        border: 1px solid blue;
        padding: 4px 8px;
        font-size: 14px;
        border-radius: 3px;
    }

        .btn:hover {
            color: white;
            background-color: blue;
        }


    .alphabet-btn {
        margin: 3px;
        padding: 4px 8px;
        font-size: 16px;
        border-radius: 3px;
    }

    .table {
        border-collapse: collapse;
        width: 100%;
        margin-top: 20px;
    }

        .table th, .table td {
            border: 1px solid #ddd;
            padding: 6px;
            text-align: left;
        }

        .table th {
            background-color: cornflowerblue;
        }

        .table tr:hover {
            background-color: #f5f5f5;
        }

    .btn-row {
        margin-top: 10px;
    }

    .show-all-btn {
        padding: 4px 8px;
        font-size: 16px;
    }
</style>
